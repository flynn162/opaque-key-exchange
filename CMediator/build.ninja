soname = libCMediator.so.0.1.0

c_include_flags = $
  -I/opt/swift/libopaque-0.99.7/include $
  -I/opt/swift/liboprf-0.4.0/include
ld_comptime_paths = $
  -L/opt/swift/libopaque-0.99.7/lib $
  `pkg-config --libs-only-L libsodium`
ld_runtime_paths = $
  -Wl,-rpath,/opt/swift/libopaque-0.99.7/lib

cc = gcc
# Note: we use the same level of optimization for release and testing
cflags = -O2 -Wall -Wextra -fPIC `pkg-config --cflags libsodium` $c_include_flags
ldlibs = -lopaque `pkg-config --libs-only-l libsodium`

# Quality assurance flags:

# - Pass `-Wl,--no-undefined` to detect any missing -l flags at build time
# <https://stackoverflow.com/a/63981003>

# - Pass `no-as-needed` to ensure linking with the sodium library (disables "lazy" behavior)
# <https://stackoverflow.com/a/62117174>
# Use `ldd -r libCMediator.so` to verify

# - Full RELRO (shown as `BIND_NOW` in `readelf -d` output)
# <https://www.redhat.com/en/blog/hardening-elf-binaries-using-relocation-read-only-relro>

# - Emit a reproducible build ID (`-Wl,--build-id`)

ldflags = -export-dynamic -Wl,-soname,$soname $
  -Wl,--no-undefined -Wl,--no-as-needed -Wl,-z,relro,-z,now -Wl,--build-id $
  `pkg-config --libs-only-other libsodium` $
  $ldlibs $ld_comptime_paths $ld_runtime_paths

test_sanitizer_flags = -fno-sanitize-recover -fno-omit-frame-pointer -fsanitize=address,undefined

builddir = build

rule build_object
  command = $cc -std=c17 -c $cflags -o $out $in

rule build_object_test
  command = $cc -std=c17 -c -g -DUNIT_TESTING $test_sanitizer_flags $cflags -o $out $in

rule build_so
  command = $cc -std=c17 -shared $ldflags -o $out $in

rule build_so_test
  command = $cc -std=c17 $test_sanitizer_flags $ldflags -lcmocka -o $out $in

rule dump_build_config
  command = (echo cc: $cc ; $
    echo cflags: $cflags ; $
    echo ldflags: $ldflags ; $
    echo test_sanitizer_flags: $test_sanitizer_flags ; $
    echo sha256: ; $
    shasum -a256 $in ; $
    echo END) >$out 2>$out

build $builddir/CMediator.o: build_object CMediator.c
build $builddir/test_CMediator.o: build_object_test CMediator.c

build $builddir/libCMediator.so: build_so $builddir/CMediator.o
build $builddir/test_libCMediator: build_so_test $builddir/test_CMediator.o

build $builddir/build_config.log: dump_build_config $builddir/libCMediator.so
build $builddir/test_config.log: dump_build_config $builddir/test_libCMediator
